{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","array","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","style","Object","object","key","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","each","nodeList","i","call","index","list"],"mappings":"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","file":"dom.8eeff33b.js","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n  //增\r\n  create(string) {\r\n    const container = document.createElement(\"template\"); //template可以存放任意标签\r\n    container.innerHTML = string.trim(); //trim去掉字符串两边空格\r\n    return container.content.firstChild;\r\n  }, //用于创建节点；\r\n  after(node, node2) {\r\n    node.parentNode.insertBefore(node2, node.nextSibling);\r\n    //想把node2放到node前面，找到这个节点的爸爸，并调用爸爸节点的insertBefore方法，然后把node2插到node的下一个节点的前面\r\n    //如果这个节点是最后一个节点，就没有下一个节点\r\n  }, //新增弟弟\r\n\r\n  before(node, node2) {\r\n    node.parentNode.insertBefore(node2, node);\r\n  }, //新增哥哥\r\n\r\n  append(parent, node) {\r\n    parent.appendChild(node);\r\n  }, //新增儿子\r\n\r\n  wrap(node, parent) {\r\n    dom.before(node, parent); //先把新的节点放到node节点前面\r\n    dom.append(parent, node); //然后把原来的放到新加的里面\r\n  }, //新增爸爸\r\n\r\n  //删\r\n  remove(node) {\r\n    node.parentNode.removeChild(node);\r\n    return node;\r\n  }, //删除节点，节点及后代元素都不存在\r\n\r\n  empty(node) {\r\n    const array = [];\r\n    let x = node.firstChild;\r\n    while (x) {\r\n      array.push(dom.remove(node.firstChild));\r\n      x = node.firstChild;\r\n    }\r\n    return array;\r\n  }, //清空该节点里的元素\r\n\r\n  //改\r\n  attr(node, name, value) {\r\n    // 重载\r\n    if (arguments.length === 3) {\r\n      node.setAttribute(name, value);\r\n    } else if (arguments.length === 2) {\r\n      return node.getAttribute(name);\r\n    }\r\n  }, //用于读写属性\r\n  text(node, string) {\r\n    // 适配\r\n    if (arguments.length === 2) {\r\n      if (\"innerText\" in node) {\r\n        node.innerText = string;\r\n      } else {\r\n        node.textContent = string;\r\n      }\r\n    } else if (arguments.length === 1) {\r\n      if (\"innerText\" in node) {\r\n        return node.innerText;\r\n      } else {\r\n        return node.textContent;\r\n      }\r\n    }\r\n  }, //用于读写文本内容\r\n\r\n  html(node, string) {\r\n    if (arguments.length === 2) {\r\n      node.innerHTML = string;\r\n    } else if (arguments.length === 1) {\r\n      return node.innerHTML;\r\n    }\r\n  }, //用于读写HTML内容\r\n\r\n  style(node, name, value){\r\n    if(arguments.length===3){\r\n      // dom.style(div, 'color', 'red')\r\n      node.style[name] = value\r\n    }else if(arguments.length===2){\r\n      if(typeof name === 'string'){\r\n        // dom.style(div, 'color')\r\n        return node.style[name]\r\n    }else if(name instanceof Object){\r\n        // dom.style(div, {color: 'red'})\r\n        const object = name\r\n        for(let key in object){\r\n          //key可能为border、color  node.style.style.border/color\r\n          //可能是对象或者字符串，是对象就设置它的值，是字符串就获取它的值\r\n          node.style[key] = object[key]\r\n        }\r\n      }\r\n    }\r\n  }, //用于修改style\r\n\r\n  class: {\r\n    add(node, className) {\r\n      node.classList.add(className);\r\n    },\r\n    remove(node, className) {\r\n      node.classList.remove(className);\r\n    },\r\n    has(node, className) {\r\n      return node.classList.contains(className);\r\n    },\r\n  }, //用于添加、删除,获取class\r\n\r\n  on(node, eventName, fn) {\r\n    node.addEventListener(eventName, fn);\r\n  },\r\n  off(node, eventName, fn) {\r\n    node.removeEventListener(eventName, fn);\r\n  }, //用于添加、删除事件监听\r\n\r\n  //查\r\n  find(selector, scope) {\r\n    return (scope || document).querySelectorAll(selector);\r\n  }, //用于获取标签\r\n\r\n  parent(node) {\r\n    return node.parentNode;\r\n  }, //用于获取父元素\r\n\r\n  children(node) {\r\n    return node.children;\r\n  }, //用于获取子元素\r\n\r\n  siblings(node) {\r\n    return Array.from(node.parentNode.children).filter((n) => n !== node);\r\n  }, //用于获取兄弟姐妹元素\r\n\r\n  next(node) {\r\n    let x = node.nextSibling;\r\n    while (x && x.nodeType === 3) {\r\n      x = x.nextSibling;\r\n    }\r\n    return x;\r\n  }, //用于获取‘弟弟’\r\n\r\n  previous(node) {\r\n    let x = node.previousSibling;\r\n    while (x && x.nodeType === 3) {\r\n      x = x.previousSibling;\r\n    }\r\n    return x;\r\n  }, //用于获取‘哥哥’\r\n\r\n  each(nodeList, fn) {\r\n    for (let i = 0; i < nodeList.length; i++) {\r\n      fn.call(null, nodeList[i]);\r\n    }\r\n  }, //用于遍历所有节点\r\n\r\n  index(node) {\r\n    const list = dom.children(node.parentNode);\r\n    let i;\r\n    for (i = 0; i < list.length; i++) {\r\n      if (list[i] === node) {\r\n        break;\r\n      }\r\n    }\r\n    return i;\r\n  }, //用于获取排行老几\r\n};\r\n"]}